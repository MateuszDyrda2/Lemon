#include <lemon/engine/py_bindings/py_input.h>

#include <lemon/window/input.h>
#include <lemon/window/key_codes.h>

#include <pybind11/embed.h>

namespace lemon {
void py_init_input()
{
}
namespace py = pybind11;
PYBIND11_EMBEDDED_MODULE(input, m)
{
    py::class_<input>(m, "input")
        .def_static("key_pressed", &input::is_key_pressed)
        .def_static("mouse_pressed", &input::is_mouse_pressed)
        .def_property_readonly_static("mousePosition", &input::get_mouse_pos);
    auto key = m.def_submodule("key");
    {
        py::enum_<key::action>(key, "action")
            .value("up", key::action::up)
            .value("down", key::action::down)
            .value("repeat", key::action::repeat)
            .export_values();
        py::enum_<key::keycode>(key, "keycode")
            .value("space", key::keycode::space)
            .value("apostrophe", key::keycode::apostrophe)
            .value("comma", key::keycode::comma)
            .value("minus", key::keycode::minus)
            .value("period", key::keycode::period)
            .value("slash", key::keycode::slash)
            .value("key_0", key::keycode::key_0)
            .value("key_1", key::keycode::key_1)
            .value("key_2", key::keycode::key_2)
            .value("key_3", key::keycode::key_3)
            .value("key_4", key::keycode::key_4)
            .value("key_5", key::keycode::key_5)
            .value("key_6", key::keycode::key_6)
            .value("key_7", key::keycode::key_7)
            .value("key_8", key::keycode::key_8)
            .value("key_9", key::keycode::key_9)
            .value("semicolon", key::keycode::semicolon)
            .value("equal", key::keycode::equal)
            .value("a", key::keycode::a)
            .value("b", key::keycode::b)
            .value("c", key::keycode::c)
            .value("d", key::keycode::d)
            .value("e", key::keycode::e)
            .value("f", key::keycode::f)
            .value("g", key::keycode::g)
            .value("h", key::keycode::h)
            .value("i", key::keycode::i)
            .value("j", key::keycode::j)
            .value("k", key::keycode::k)
            .value("l", key::keycode::l)
            .value("m", key::keycode::m)
            .value("n", key::keycode::n)
            .value("o", key::keycode::o)
            .value("p", key::keycode::p)
            .value("q", key::keycode::q)
            .value("r", key::keycode::r)
            .value("s", key::keycode::s)
            .value("t", key::keycode::t)
            .value("u", key::keycode::u)
            .value("v", key::keycode::v)
            .value("w", key::keycode::w)
            .value("x", key::keycode::x)
            .value("y", key::keycode::y)
            .value("z", key::keycode::z)
            .value("left_bracket", key::keycode::left_bracket)
            .value("backslash", key::keycode::backslash)
            .value("right_bracket", key::keycode::right_bracket)
            .value("grave_accent", key::keycode::grave_accent)
            .value("world_1", key::keycode::world_1)
            .value("world_2", key::keycode::world_2)
            .value("escape", key::keycode::escape)
            .value("enter", key::keycode::enter)
            .value("tab", key::keycode::tab)
            .value("backspace", key::keycode::backspace)
            .value("insert", key::keycode::insert)
            .value("del", key::keycode::del)
            .value("right_arrow", key::keycode::right_arrow)
            .value("left_arrow", key::keycode::left_arrow)
            .value("down_arrow", key::keycode::down_arrow)
            .value("up_arrow", key::keycode::up_arrow)
            .value("page_up", key::keycode::page_up)
            .value("page_down", key::keycode::page_down)
            .value("home", key::keycode::home)
            .value("end", key::keycode::end)
            .value("caps_lock", key::keycode::caps_lock)
            .value("scroll_lock", key::keycode::scroll_lock)
            .value("num_lock", key::keycode::num_lock)
            .value("print_screen", key::keycode::print_screen)
            .value("pause", key::keycode::pause)
            .value("f1", key::keycode::f1)
            .value("f2", key::keycode::f2)
            .value("f3", key::keycode::f3)
            .value("f4", key::keycode::f4)
            .value("f5", key::keycode::f5)
            .value("f6", key::keycode::f6)
            .value("f7", key::keycode::f7)
            .value("f8", key::keycode::f8)
            .value("f9", key::keycode::f9)
            .value("f10", key::keycode::f10)
            .value("f11", key::keycode::f11)
            .value("f12", key::keycode::f12)
            .value("f13", key::keycode::f13)
            .value("f14", key::keycode::f14)
            .value("f15", key::keycode::f15)
            .value("f16", key::keycode::f16)
            .value("f17", key::keycode::f17)
            .value("f18", key::keycode::f18)
            .value("f19", key::keycode::f19)
            .value("f20", key::keycode::f20)
            .value("f21", key::keycode::f21)
            .value("f22", key::keycode::f22)
            .value("f23", key::keycode::f23)
            .value("f24", key::keycode::f24)
            .value("f25", key::keycode::f25)
            .value("kp_0", key::keycode::kp_0)
            .value("kp_1", key::keycode::kp_1)
            .value("kp_2", key::keycode::kp_2)
            .value("kp_3", key::keycode::kp_3)
            .value("kp_4", key::keycode::kp_4)
            .value("kp_5", key::keycode::kp_5)
            .value("kp_6", key::keycode::kp_6)
            .value("kp_7", key::keycode::kp_7)
            .value("kp_8", key::keycode::kp_8)
            .value("kp_9", key::keycode::kp_9)
            .value("kp_decimal", key::keycode::kp_decimal)
            .value("kp_divide", key::keycode::kp_divide)
            .value("kp_multiply", key::keycode::kp_multiply)
            .value("kp_subtract", key::keycode::kp_subtract)
            .value("kp_add", key::keycode::kp_add)
            .value("kp_enter", key::keycode::kp_enter)
            .value("kp_equal", key::keycode::kp_equal)
            .value("left_shift", key::keycode::left_shift)
            .value("left_control", key::keycode::left_control)
            .value("left_alt", key::keycode::left_alt)
            .value("left_super", key::keycode::left_super)
            .value("right_shift", key::keycode::right_shift)
            .value("right_control", key::keycode::right_control)
            .value("right_alt", key::keycode::right_alt)
            .value("right_super", key::keycode::right_super)
            .value("menu", key::keycode::menu)
            .export_values();
        py::enum_<key::keymod>(key, "keymod")
            .value("SHIFT", key::keymod::SHIFT)
            .value("CONTROL", key::keymod::CONTROL)
            .value("ALT", key::keymod::ALT)
            .value("SUPER", key::keymod::SUPER)
            .value("CAPS_LOCK", key::keymod::CAPS_LOCK)
            .value("NUM_LOCK", key::keymod::NUM_LOCK)
            .export_values();
        py::enum_<key::mouse>(key, "mouse")
            .value("button_1", key::mouse::button_1)
            .value("button_2", key::mouse::button_2)
            .value("button_3", key::mouse::button_3)
            .value("button_4", key::mouse::button_4)
            .value("button_5", key::mouse::button_5)
            .value("button_6", key::mouse::button_6)
            .value("button_7", key::mouse::button_7)
            .value("button_8", key::mouse::button_8)
            .export_values();
    }
}
} // namespace lemon
